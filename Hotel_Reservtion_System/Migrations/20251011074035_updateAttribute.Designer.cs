// <auto-generated />
using System;
using Hotel_Reservtion_System.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_Reservtion_System.Migrations
{
    [DbContext(typeof(HoteldbContext))]
    [Migration("20251011074035_updateAttribute")]
    partial class updateAttribute
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Booking", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("checkIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("checkOut")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("roomid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("roomid");

                    b.HasIndex("userid");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Branch", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("location")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("Branches", (string)null);
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Invoice", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bookID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("discount")
                        .HasColumnType("float");

                    b.Property<double?>("finalAmount")
                        .HasColumnType("float");

                    b.Property<string>("status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("tax")
                        .HasColumnType("float");

                    b.Property<double?>("totalAmount")
                        .HasColumnType("float");

                    b.Property<Guid?>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("bookID");

                    b.HasIndex("userID");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Notification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("Notifcations", (string)null);
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Room", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("availability")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("cheakout")
                        .HasColumnType("datetime2");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<string>("roomCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("roomType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.HasIndex("branchID");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("confirmPassword")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isApproved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("password")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Booking", b =>
                {
                    b.HasOne("Hotel_Reservtion_System.Entity.Room", "room")
                        .WithMany()
                        .HasForeignKey("roomid");

                    b.HasOne("Hotel_Reservtion_System.Entity.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("room");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Invoice", b =>
                {
                    b.HasOne("Hotel_Reservtion_System.Entity.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("bookID");

                    b.HasOne("Hotel_Reservtion_System.Entity.User", "createdBy")
                        .WithMany()
                        .HasForeignKey("userID");

                    b.Navigation("booking");

                    b.Navigation("createdBy");
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Notification", b =>
                {
                    b.HasOne("Hotel_Reservtion_System.Entity.User", "user")
                        .WithMany()
                        .HasForeignKey("userID");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Hotel_Reservtion_System.Entity.Room", b =>
                {
                    b.HasOne("Hotel_Reservtion_System.Entity.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("branchID");

                    b.Navigation("branch");
                });
#pragma warning restore 612, 618
        }
    }
}
